name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        platform: [x64, Win32]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Setup CMake
      uses: lukka/get-cmake@latest
      
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -A ${{ matrix.platform }}
        
    - name: Build
      run: |
        cd build
        cmake --build . --config ${{ env.BUILD_TYPE }}
        
    - name: Test basic functionality
      run: |
        cd build/bin/${{ env.BUILD_TYPE }}
        echo "Testing DLL load..."
        if (Test-Path "WinShellPreview.dll") {
          Write-Host "✓ DLL built successfully"
        } else {
          Write-Host "✗ DLL not found"
          exit 1
        }
        if (Test-Path "TestApp.exe") {
          Write-Host "✓ TestApp built successfully"
        } else {
          Write-Host "✗ TestApp not found"
          exit 1
        }
      shell: powershell
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: WinShellPreview-${{ matrix.platform }}-${{ env.BUILD_TYPE }}
        path: |
          build/bin/${{ env.BUILD_TYPE }}/WinShellPreview.dll
          build/bin/${{ env.BUILD_TYPE }}/TestApp.exe
          build/lib/${{ env.BUILD_TYPE }}/WinShellPreview.lib
          WinShellPreview/WinShellPreview.h
        retention-days: 30

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download artifacts (x64)
      uses: actions/download-artifact@v3
      with:
        name: WinShellPreview-x64-Release
        path: release/x64/
        
    - name: Download artifacts (Win32)
      uses: actions/download-artifact@v3
      with:
        name: WinShellPreview-Win32-Release
        path: release/Win32/
        
    - name: Create release package
      run: |
        mkdir release-package
        
        # x64版
        mkdir release-package/x64
        copy release/x64/WinShellPreview.dll release-package/x64/
        copy release/x64/TestApp.exe release-package/x64/
        copy release/x64/WinShellPreview.lib release-package/x64/
        
        # Win32版
        mkdir release-package/Win32
        copy release/Win32/WinShellPreview.dll release-package/Win32/
        copy release/Win32/TestApp.exe release-package/Win32/
        copy release/Win32/WinShellPreview.lib release-package/Win32/
        
        # ヘッダーファイル
        copy release/x64/WinShellPreview.h release-package/
        
        # ドキュメント
        copy README.md release-package/
        copy LICENSE release-package/
        copy CONTRIBUTING.md release-package/
        
        # ZIP圧縮
        Compress-Archive -Path release-package/* -DestinationPath WinShellPreview-${{ github.ref_name }}.zip
      shell: powershell
      
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: WinShellPreview-${{ github.ref_name }}.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
